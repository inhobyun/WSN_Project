#include <stdlib.h>     //exit()
#include <signal.h>     //signal()
#include <time.h>
#include "ADS1256.h"
#include "stdio.h"

#include <string.h>

float timedifference_msec(struct timeval t0, struct timeval t1)
{
    return (t1.tv_sec - t0.tv_sec) * 1000.0f + (t1.tv_usec - t0.tv_usec) / 1000.0f;
}

void  Handler(int signo)
{
    //System Exit
    printf("\r\nEND                  \r\n");
    DEV_ModuleExit();

    exit(0);
}

int main(void)
{
    struct timeval t0;
    struct timeval t1;
    float elapsed;
    
    UDOUBLE ADC[8],i;
    UDOUBLE An0Value;
    UDOUBLE An1Value;
    UDOUBLE An2Value;
    printf("demo\r\n");
    DEV_ModuleInit();

    // Exception handling:ctrl + c
    signal(SIGINT, Handler);

    if(ADS1256_init() == 1) {
        printf("\r\nEND                  \r\n");
        DEV_ModuleExit();
        exit(0);
    }

    while(1) {
        
        gettimeofday(&t0, 0);
        // printf("0 : %f\r\n",ADS1256_GetChannalValue(0)*5.0/0x7FFFFF);
        An0Value = ADS1256_GetChannalValue(0)*5.0/0x7FFFFF;
        An1Value = ADS1256_GetChannalValue(1)*5.0/0x7FFFFF;
        An2Value = ADS1256_GetChannalValue(2)*5.0/0x7FFFFF;
        gettimeofday(&t1, 0);
        elapsed = timedifference_msec(t0, t1);
        printf("Read executed in %f milliseconds.\n", elapsed);
        
        // printf("1 : %f\r\n",ADS1256_GetChannalValue(1)*5.0/0x7FFFFF);
        // printf("2 : %f\r\n",ADS1256_GetChannalValue(2)*5.0/0x7FFFFF);
        // printf("3 : %f\r\n",ADS1256_GetChannalValue(3)*5.0/0x7FFFFF);
        // printf("4 : %f\r\n",ADS1256_GetChannalValue(4)*5.0/0x7FFFFF);
        // printf("5 : %f\r\n",ADS1256_GetChannalValue(5)*5.0/0x7FFFFF);
        // printf("6 : %f\r\n",ADS1256_GetChannalValue(6)*5.0/0x7FFFFF);
        // printf("7 : %f\r\n",ADS1256_GetChannalValue(7)*5.0/0x7FFFFF);
        
        
        //ADS1256_GetAll(ADC);
        //for(i=0;i<8;i++) {
        //    printf("%d %f\r\n",i,ADC[i]*5.0/0x7FFFFF);
        //}
        //printf("\33[8A");//Move the cursor up 8 lines
    }
    return 0;
}
